#Hibernate 配置  

#hibernate方言   依次为：  mysql5,mysqlInnoDB（推荐），SQLServer,HSQL,Oracle9i以上版本
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#hibernate.dialect=org.hibernate.dialect.Oracle9Dialect



##是否启用二级缓存
hibernate.cache.use_query_cache=true
#二级缓存class
hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
# hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
# hibernate.cache.provider_class=org.hibernate.cache.SingletonEhCacheProvider
#二级缓存配置文件
hibernate.cache.provider_configuration_file_resource_path=/conf/cache/ehcache.xml


#hbm2ddl.auto = none: 不做任何操作
#create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行。会导致数据库表数据丢失。
#create-drop: 每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update:第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
#validate:验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
hibernate.hbm2ddl.auto=none

#关于hibernate.jdbc.fetch_size与hibernate.jdbc.batch_size的设置，可能会将严重影响Hibernate的CRUD性能。
#设定JDBC的Statement读取数据的时候每次从数据库中取出的记录条数。
#Fetch Size设的越大，读数据库的次数越少，速度越快；Fetch Size越小，读数据库的次数越多，速度越慢。
#MySQL就支持Fetch Size特性
hibernate.jdbc.fetch_size=20
#设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小。
#Batch Size越大，批量操作的向数据库发送sql的次数越少，速度就越快。
hibernate.jdbc.batch_size=50


#显示SQL语句，如果不想让SQL在控制台输出，以下的三项全部设置为false
hibernate.show_sql=true
#格式化SQL语句
hibernate.format_sql=false
#如果设置为true，Hiberante将为SQL产生注释，这样更利于调试。默认值为false。
hibernate.use_sql_comments=false

#p6spy  输出真实的SQL语句
hibernate.connection.driver_class=com.p6spy.engine.spy.P6SpyDriver
hibernate.current_session_context_class=thread

